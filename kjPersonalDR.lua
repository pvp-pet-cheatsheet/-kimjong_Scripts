if (RogueDR == 1) then
  USD="UNIT_SPELLCAST_SUCCEEDED";OT="OnEvent";FR="Frame";RF=CreateFrame;RD="Border";UE=UnitName
  CS=RF(FR) CS.c=RF("Cooldown","CST",CS.t,"CooldownFrameTemplate") CS.c:SetDrawEdge(false)CS:RegisterEvent(USD)
  CS.c:SetAllPoints(CS) CS:SetPoint("TOPRIGHT",PlayerFrame,-3,6)CS:SetSize(26,26)CS:Show()CS.t=CS:CreateTexture(nil,RD)CS.t:SetAllPoints()CS.t:SetTexture("Interface\\Icons\\ability_rogue_kidneyshot")
  CS:SetScript(OT,function(self,event,...)if UE(select(1,...))==UE("player")and select(5,...)==1833 then CST:SetCooldown(GetTime(),23)end if UE(select(1,...))==UE("player")and select(5,...)==408 then CST:SetCooldown(GetTime(),24)end end)
  SP=RF(FR) SP.c=RF("Cooldown","SAP",SP.t,"CooldownFrameTemplate") SP.c:SetDrawEdge(false) SP:RegisterEvent(USD)
  SP.c:SetAllPoints(SP) SP:SetPoint("TOPRIGHT",PlayerFrame,-29,6)SP:Show()SP:SetSize(26,26)SP.t=SP:CreateTexture(nil,RD)SP.t:SetAllPoints()SP.t:SetTexture("Interface\\Icons\\ability_sap")
  SP:SetScript(OT,function(self,event,...)if UE(select(1,...))==UE("player")and select(5,...)==6770 then SAP:SetCooldown(GetTime(),26)end if UE(select(1,...))==UE("player")and select(5,...)==1776 then SAP:SetCooldown(GetTime(),22)end end)
  -- snd tracker
  local snd = CreateFrame("Cooldown", nil, PlayerFrame, "CooldownFrameTemplate")
  snd:SetDrawEdge(false)
  snd:ClearAllPoints()
  snd:SetPoint("BOTTOMRIGHT",PlayerFrame,115,6)
  snd:SetSize(34,34)
  snd.Icon = CreateFrame("Frame", nil, snd)
  snd.Icon:SetFrameLevel(snd:GetFrameLevel() - 1)
  snd:SetFrameStrata("HIGH")
  snd.Icon:SetAllPoints()
  snd.Icon.Texture = snd.Icon:CreateTexture(nil, "ARTWORK")
  snd.Icon.Texture:SetPoint("BOTTOMRIGHT",PlayerFrame,115,6)
  snd.Icon.Texture:SetSize(34,34)
  snd.Icon.Texture:SetTexture("Interface\\Icons\\ability_rogue_slicedice")
  snd.Icon.Border = CreateFrame("Frame", nil, snd.Icon)
  snd.Icon.Border:SetAllPoints()
  snd.Icon.Border.Texture = snd.Icon.Border:CreateTexture(nil, Border)
  snd:RegisterEvent("UNIT_AURA")
  snd:SetScript("OnEvent", function(self, event, unit)
    snd.CheckAura(unit)
  end)
  function snd.CheckAura(unit)
    local spellname = GetSpellInfo(5171)
    local _, _, _, _, _, duration, expirationTime, unitCaster, _, _, id = UnitBuff("player", spellname)
    if id and unitCaster == "player" then
      snd:Show()
      snd:SetCooldown(expirationTime - duration - 0.5, duration)
      return
    end
    snd:Hide()
  end
  -- recuperate tracker
  local recup = CreateFrame("Cooldown", nil, PlayerFrame, "CooldownFrameTemplate")
  recup:SetDrawEdge(false)
  recup:ClearAllPoints()
  recup:SetPoint("BOTTOMRIGHT",PlayerFrame,115,40)
  recup:SetSize(34,34)
  recup.Icon = CreateFrame("Frame", nil, recup)
  recup.Icon:SetFrameLevel(recup:GetFrameLevel() - 1)
  recup:SetFrameStrata("HIGH")
  recup.Icon:SetAllPoints()
  recup.Icon.Texture = recup.Icon:CreateTexture(nil, "ARTWORK")
  recup.Icon.Texture:SetPoint("BOTTOMRIGHT",PlayerFrame,115,40)
  recup.Icon.Texture:SetSize(34,34)
  recup.Icon.Texture:SetTexture("Interface\\Icons\\ability_rogue_recuperate")
  recup.Icon.Border = CreateFrame("Frame", nil, recup.Icon)
  recup.Icon.Border:SetAllPoints()
  recup.Icon.Border.Texture = recup.Icon.Border:CreateTexture(nil, Border)
  recup:RegisterEvent("UNIT_AURA")
  recup:SetScript("OnEvent", function(self, event, unit)
    recup.CheckAura(unit)
  end)
  function recup.CheckAura(unit)
    local spellname = GetSpellInfo(73651)
    local _, _, _, _, _, duration, expirationTime, unitCaster, _, _, id = UnitBuff("player", spellname)
    if id and unitCaster == "player" then
      recup:Show()
      recup:SetCooldown(expirationTime - duration - 0.5, duration)
      return
    end
    recup:Hide()
  end

  --vendetta tracker
  local vend = CreateFrame("Cooldown", nil, PlayerFrame, "CooldownFrameTemplate")
  vend:SetDrawEdge(false)
  vend:ClearAllPoints()
  vend:SetPoint("BOTTOMRIGHT",PlayerFrame,149,6)
  vend:SetSize(34,34)
  vend.Icon = CreateFrame("Frame", nil, vend)
  vend.Icon:SetFrameLevel(vend:GetFrameLevel() - 1)
  vend:SetFrameStrata("HIGH")
  vend.Icon:SetAllPoints()
  vend.Icon.Texture = vend.Icon:CreateTexture(nil, "ARTWORK")
  vend.Icon.Texture:SetPoint("BOTTOMRIGHT",PlayerFrame,149,6)
  vend.Icon.Texture:SetSize(34,34)
  vend.Icon.Texture:SetTexture("Interface\\Icons\\ability_rogue_deadliness")
  vend.Icon.Border = CreateFrame("Frame", nil, vend.Icon)
  vend.Icon.Border:SetAllPoints()
  vend.Icon.Border.Texture = vend.Icon.Border:CreateTexture(nil, Border)
  vend:RegisterEvent("UNIT_AURA")
  vend:SetScript("OnEvent", function(self, event, unit)
    vend.CheckAura(unit)
  end)
  function vend.CheckAura(unit)
    local spellname = GetSpellInfo(79140)
    local _, _, _, _, _, duration, expirationTime, unitCaster, _, _, id = UnitDebuff("target", spellname)
    if id and unitCaster == "player" then
      vend:Show()
      vend:SetCooldown(expirationTime - duration - 0.5, duration)
      return
    end
    vend:Hide()
  end
  --rupture tracker
  local rupt = CreateFrame("Cooldown", nil, PlayerFrame, "CooldownFrameTemplate")
  rupt:SetDrawEdge(false)
  rupt:ClearAllPoints()
  rupt:SetPoint("BOTTOMRIGHT",PlayerFrame,149,40)
  rupt:SetSize(34,34)
  rupt.Icon = CreateFrame("Frame", nil, rupt)
  rupt.Icon:SetFrameLevel(rupt:GetFrameLevel() - 1)
  rupt:SetFrameStrata("HIGH")
  rupt.Icon:SetAllPoints()
  rupt.Icon.Texture = rupt.Icon:CreateTexture(nil, "ARTWORK")
  rupt.Icon.Texture:SetPoint("BOTTOMRIGHT",PlayerFrame,149,40)
  rupt.Icon.Texture:SetSize(34,34)
  rupt.Icon.Texture:SetTexture("Interface\\Icons\\ability_rogue_rupture")
  rupt.Icon.Border = CreateFrame("Frame", nil, rupt.Icon)
  rupt.Icon.Border:SetAllPoints()
  rupt.Icon.Border.Texture = rupt.Icon.Border:CreateTexture(nil, Border)
  rupt:RegisterEvent("UNIT_AURA")
  rupt:SetScript("OnEvent", function(self, event, unit)
    rupt.CheckAura(unit)
  end)
  function rupt.CheckAura(unit)
    local spellname = GetSpellInfo(1943)
    local _, _, _, _, _, duration, expirationTime, unitCaster, _, _, id = UnitDebuff("target", spellname)
    if id and unitCaster == "player" then
      rupt:Show()
      rupt:SetCooldown(expirationTime - duration - 0.5, duration)
      return
    end
    rupt:Hide()
  end
end